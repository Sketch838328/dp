//Factory Method

//Interface Shape

public interface Shape{
    void draw();
}


//class Rectangle
public class Rectangle implements Shape{
//@Override
public void draw(){
System.out.println("Inside rectangle::draw method");
}
}

//class ShapeFactory
public class ShapeFactory{

public Shape getShape(String shapeType){
 if(shapeType==null){
   return null;
}

  if(shapeType.equalsIgnoreCase("CIRCLE")){
   return new Circle();
 }
  else if(shapeType.equalsIgnoreCase("RECTANGLE")){
    return new Rectangle();
  }
  else if(shapeType.equalsIgnoreCase("SQUARE")){
    return new Square();
    }
   return null;
}
}

//class FactoryPatternDemo
//step4 use the factory to get object of concreate class
public class FactoryPatternDemo{
public static void main(String[] args){
ShapeFactory shapeFactory=new ShapeFactory();
//get an object of circle and call its draw method
Shape shape1=shapeFactory.getShape("CIRCLE");
//call draw method of circle
shape1.draw();
Shape shape2=shapeFactory.getShape("RECTANGLE");
shape2.draw();
Shape shape3=shapeFactory.getShape("SQUARE");
shape3.draw();
}
}